<tool name="run_checkm"
 threads="20"
 walltime="12:00:00"
 tool_config_prefix="runcheckm">
<description>
A simple wrapper to run checkm on bins
</description>
<!-- 
Input:
   * fasta file
   * metabat -l result files (headers only)
Output:
   * fasta directory to write files to
   * checkm directory
   * checkm output file
   * checkm tree assignment file
-->   
<module>prodigal</module>
<module>hmmer</module>
<!-- load virtual env. change if will be changed -->
<command program="source /opt/compsci/assembly_tools/0.3.12/bin/activate"> </command>
<command program="fasta_tools.py headers">
 --base {out_1} {in_1} {in_2}.*
</command>
<option name="threads" command_text="-t" type="threads" description="Number of threads to use" display_name="threads" />
<command program="checkm lineage_wf">
-x fasta {threads} --tab_table -q -f {out_3} {out_1} {out_2}
</command>
<command program="checkm tree_qa">
--tab_table -o 2 -f {out_4} {out_2}
</command>
<command program="if">
 ! ls {out_3} 1> /dev/null ; then echo $'Bin Id\tMarker lineage\t# genomes\t# markers\t# marker sets\t0\t1\t2\t3\t4\t5+\tCompleteness\tContamination\tStrain heterogeneity'> {out_3}; fi
</command>
<command program="if">
 ! ls {out_4} 1> /dev/null ; then echo $'Bin Id\t# unique markers (of 43)\t# multi-copy\tInsertion branch UID\tTaxonomy (contained)\tTaxonomy (sister lineage)\tGC\tGenome size (Mbp)\tGene count\tCoding density\tTranslation table\t# descendant genomes\tLineage: GC mean\tLineage: GC std\tLineage: genome size (Mbp) mean\tLineage: genome size (Mbp) std\tLineage: gene count mean\tLineage: gene count std'> {out_4}; fi
</command>
</tool>
