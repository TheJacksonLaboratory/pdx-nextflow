<tool name="Variant_Annotation" walltime="5:00:00"
      error_strings="'##### ERROR MESSAGE:'">
    <description>
        Annotate variants with snpEff and SnpSift.
    </description>
    <!--
        Ins:
	  1: variants_filtered
	  2: microIndels_filtered 
	  3: outdir
        Outs:
	  1: variants_filtered_annotated
	  2: variants_hardfiltered_annotated
    -->
    
   

    <file id="snpEff" input="True"
        filespec="/opt/compsci/snpEff/4.0e/snpEff.jar" />
          
    <file id="snpSift" input="True"
        filespec="/opt/compsci/snpEff/4.1g/SnpSift.jar" />

    <file id="snpSift_onePerLine" input="True"
        filespec="/opt/compsci/snpEff/4.1g/scripts/vcfEffOnePerLine.pl" />

    <file id="dbNSFP" input="True"
        filespec="/data/shared/cga_reference_data/hg38_201601/dbNSFP.txt.gz" />

   <file id="rawsnp" temp="True" 
    	filespec="raw_snps.vcf" />
  <file id="rawindel" temp="True" 
    	filespec="raw_indels.vcf" />

  <file id="filteredsnp" temp="True" 
    	filespec="filtered_snps.vcf" />
  <file id="filteredindel" temp="True" 
    	filespec="filtered_indels.vcf" />


    <file id="dbsnp_144" input="True"
	  filespec="/data/shared/cga_reference_data/hg38_201601/dbsnp_144.hg38.vcf.gz" />
 
    <file id="gatk" input="True"
          filespec="/opt/compsci/GATK/3.4-0/GenomeAnalysisTK.jar" />

   
   <file id="foramtvcf" temp="True"
        based_on="in_1" append=".formatted.tmp.vcf" />

    <file id="vcf1" temp="True"
        based_on="in_1" append=".DPfiltered.tmp.vcf" />
   <file id="vcf2" temp="True"
        based_on="in_1" append=".additionalfilters.tmp.vcf" />

     <file id="vcf3" temp="True"
        based_on="in_1" append=".combined_filters.vcf" />

    <file id="vcf4"  temp ="True" in_dir="in_2"
    	filespec="all_genes_variants_microindels_snpEff.vcf" />

    	
    <file id="vcf5"   temp ="True"  in_dir="in_2"
    	filespec="all_genes_variants_microindels_snpEff_snpSift.vcf" />

    <file id="vcf6"  temp ="True" in_dir="in_2"
    	filespec="all_genes_variants_microindels_snpEff_snpSift_onePerline.vcf" />

    <file id="vcf7" temp ="True"  in_dir="in_2"
    	filespec="all_genes_variants_microindels_snpEff_snpSift_cosmic.vcf" />

 



    <!-- Step 4.6: Variant_Annotation -->
    <module>java/1.7.0</module>
    <module>perl/cga</module>
    <module>vcf-tools/0.1.12a</module>
    <module >tabix</module>

    <validate id="snpEff" />
    <validate id="snpSift" />
    <validate id="snpSift_onePerLine" />

   
<command program="cat">
        <!-- This version command looks strange, but is correct. The
        cat command has no versioning, but the vcf-sort used below is part of the vcftools suite, so here we're getting its
        version-->
    	<version_command>vcftools | grep VCFtools</version_command>
		{in_1}|sed 's/DP/DP_HQ/'|sed 's/;AF/;ALT_AF/g' |sed 's/ID=AF/ID=ALT_AF/g' > {foramtvcf}
  
    </command>


 <command program="vcf_sorter.sh" >
       {foramtvcf} {vcf1}
    </command>



<command program="java">
        <version_command>java -jar {snpSift} 2>&amp;1 | grep version</version_command>
        -jar {snpSift} annotate -id {dbsnp_144} {vcf1} > {vcf2}
    </command>



    <command program="java">
        <version_command>java -jar {gatk} --help | grep "(GATK)"</version_command>
        -Djava.io.tmpdir=$TMPDIR
        -Xmx2g -jar {gatk} -T SelectVariants  -R {in_4} -V {vcf2}  -selectType SNP -o {rawsnp}
      </command>
    
    <command program="java">
        <version_command>java -jar {gatk} --help | grep "(GATK)"</version_command>
        -Djava.io.tmpdir=$TMPDIR
        -Xmx2g -jar {gatk} -T SelectVariants  -R {in_4} -V {vcf2}  -selectType INDEL -o {rawindel}
      </command>
    
    
    
    
 <!-- Step 5.2: Soft filtered SNPs -->
     <command program="java">
     -Djava.io.tmpdir=$TMPDIR
     -Xmx8g -jar {gatk}  -R {in_4} -T VariantFiltration --out {filteredsnp}
     --variant {rawsnp} --clusterWindowSize 10
     --filterExpression "MQ0 &gt;= 4 &amp;&amp; ((MQ0 / (1.0 * DP)) &gt; 0.1)"
     --filterName "HARD_TO_VALIDATE"
     --filterExpression "DP &lt; 5"
     --filterName "LowCoverage"     
     --filterExpression "QUAL &lt; 30.0" --filterName "VeryLowQual" 
     --filterExpression "QUAL &gt; 30.0 &amp;&amp; QUAL &lt; 50.0"
     --filterName "LowQual"
     --filterExpression "QD &lt; 1.5"
     --filterName "LowQD"
     --filterExpression "FS &gt; 60.0"
     --filterName "StrandBias"
   </command>


    

<!-- Step 5.6: Soft filtered Indels -->
     <command program="java">
     -Djava.io.tmpdir=$TMPDIR
     -Xmx8g -jar {gatk}  -R {in_4} -T VariantFiltration --out {filteredindel}
     --variant {rawindel} --clusterWindowSize 10
     --filterExpression "MQ0 &gt;= 4 &amp;&amp; ((MQ0 / (1.0 * DP)) &gt; 0.1)"
     --filterName "HARD_TO_VALIDATE"
     --filterExpression "DP &lt; 5"
     --filterName "LowCoverage"
     --filterExpression "QUAL &lt; 30.0" --filterName "VeryLowQual"
     --filterExpression "QUAL &gt; 30.0 &amp;&amp; QUAL &lt; 50.0"
     --filterName "LowQual"
     --filterExpression "QD &lt; 1.5"
     --filterName "LowQD"
     --filterExpression "FS &gt; 200.0"
     --filterName "StrandBias"
     </command>





 <command program="cat">
        <!-- This version command looks strange, but is correct. The
        cat command has no versioning, but the vcf-sort used below is part of the vcftools suite, so here we're getting its
        version-->
    	<version_command>vcftools | grep VCFtools</version_command>
		{filteredsnp} {filteredindel} | vcf-sort > {vcf3}
    </command>
    
  

    <command program="java">
    	<version_command>java -jar {snpEff} 2>&amp;1 | grep version</version_command>
        -jar {snpEff} eff -v -lof -canon -hgvs hg38
         -noStats {vcf3} > {vcf4}
    </command>



    
    <command program="java">
    	<version_command>java -jar {snpEff} 2>&amp;1 | grep version</version_command>
        -jar {snpSift} dbnsfp -v -db {dbNSFP} -noDownload 
        -f SIFT_score,SIFT_pred,Polyphen2_HDIV_score,MutationAssessor_score,phyloP7way_vertebrate,1000Gp3_AF,1000Gp3_AFR_AF,1000Gp3_EUR_AF,1000Gp3_AMR_AF,1000Gp3_EAS_AF,ESP6500_AA_AF,ESP6500_EA_AF,ExAC_AC,ExAC_AF
        {vcf4} > {vcf5}
    </command>

    <command program="cat">
        <!-- This version command looks strange, but is correct. The
        cat command has no versioning, but the snpSift_onePerLine is
        a perl script in the snpEff package, so here we're getting its
        version-->
    	<version_command>java -jar {snpEff} 2>&amp;1 | grep version</version_command>
        {vcf5} | {snpSift_onePerLine} > {vcf6}
    </command>

    <command program="java">
    	<!-- Add COSMIC annotation -->
    	<version_command>java -jar {snpSift} 2>&amp;1 | grep version</version_command>
    	-jar {snpSift} annotate -id {in_3} {vcf6} > {vcf7}
    </command>


     <command program="java">
        <version_command>java -jar {snpEff} 2>&amp;1 | grep version</version_command>
        -jar {snpSift} extractFields {vcf7} 
        CHROM POS REF ALT ID FILTER DP_HQ ALT_AF "LOF[*].NUMTR"
        "LOF[*].PERC"
        "EFF[*].GENE" "EFF[*].EFFECT" "EFF[*].IMPACT" "EFF[*].FUNCLASS" "EFF[*].RANK" "EFF[*].CODON" "EFF[*].AA" "EFF[*].AA_LEN" "EFF[*].CODING" "EFF[*].TRID" "dbNSFP_SIFT_score" "dbNSFP_SIFT_pred" "dbNSFP_Polyphen2_HDIV_score" "dbNSFP_MutationAssessor_score" "dbNSFP_phyloP7way_vertebrate" "dbNSFP_1000Gp3_AF" "dbNSFP_1000Gp3_AFR_AF" "dbNSFP_1000Gp3_EUR_AF" "dbNSFP_1000Gp3_AMR_AF" "dbNSFP_1000Gp3_EAS_AF" "dbNSFP_ESP6500_AA_AF" "dbNSFP_ESP6500_EA_AF" "dbNSFP_ExAC_AC" "dbNSFP_ExAC_AF"
        > {out_1}
    </command>
  

</tool>
