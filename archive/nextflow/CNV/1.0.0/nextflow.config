// Copyright Jackson Laboratory 2020

// Config file that won't be edited by individual users and will remain constant; contains parameters such as containers to use/walltime/memory

//====================  Nextflow/Container Config  ==========

manifest {
    name = "PDX_CNV"
    description = 'Pipeline for processing of PDX CNV samples.'
    author = 'Xing Yi Woo, Anuj Srivastava, Carolyn Paisie, Copyright Jackson Laboratory 2020'
    mainScript = "hcnv.nf"
    version = "1.0.0"
}

params{

  model_gender = '/projects/omics_share/.pdx/pdx_resource_service/elion/pipelines/bin/get_model_gender.py'

  norm_geno_clust = '/projects/omics_share/.pdx/pdx_resource_service/elion/pipelines/bin/normalize_affy_geno_cluster.pl'

  tumor_lrrbaf_ASCAT = '/projects/omics_share/.pdx/pdx_resource_service/elion/pipelines/bin/lrrbaf_ascat_tumor.R'

  extend_raw_seg = '/projects/omics_share/.pdx/pdx_resource_service/elion/pipelines/bin/segment_raw_extend.pl'

  ensembl_cnv = '/projects/omics_share/.pdx/pdx_resource_service/elion/pipelines/bin/ensemblegenes_cnv_break.pl'

  msp_get = '/projects/omics_share/.pdx/pdx_resource_service/elion/pipelines/bin/get_msp.py'

  plot_seg = '/projects/omics_share/.pdx/pdx_resource_service/elion/pipelines/bin/seg_plot.R'

}


process{
  withLabel:short_mem{
    cpus = 1
    time = '04:00:00'
    clusterOptions = '-q batch'
    containerOptions = '-B /pdx/pdx_resource_service/ -B ${HOME}'
  }
  withLabel:med_mem{
    cpus = 1
    time = '08:00:00'
    clusterOptions = '-q batch'
    containerOptions = '-B /pdx/pdx_resource_service/ -B ${HOME}'
  }
}

process {
  withLabel: apt2_11_3_python2_7_11       { container = "/projects/omics_share/.pdx/pdx_resource_service/elion/containers/apt2.11.3_python2.7.11.sif" }
  withLabel: apt_perl                     { container = "/projects/omics_share/.pdx/pdx_resource_service/elion/containers/apt2.11.3_perl.sif" }
  withLabel: ASCAT_and_annot              { container = "/projects/omics_share/.pdx/pdx_resource_service/elion/containers/devtools_ASCAT_R.sif" }
}

report {
    enabled = true // false
    file = "nf_reports/report.html"
}

trace {
    enabled = true // false
    file = "nf_reports/trace.txt"
    fields = \
         "task_id,"   \
       + "hash,"      \
       + "process,"   \
       + "tag,"       \
       + "status,"    \
       + "exit,"      \
       + "start,"     \
       + "container," \
       + "cpus,"      \
       + "time,"      \
       + "disk,"      \
       + "memory,"    \
       + "duration,"  \
       + "realtime,"  \
       + "queue,"     \
       + "%cpu,"      \
       + "%mem,"      \
       + "rss,"       \
       + "vmem,"      \
       + "rchar,"     \
       + "wchar"
}


profiles {

 slurm {
  process.executor = "slurm"
  process.clusterOptions = '-q batch'
  process.module = "slurm"
  }

 singularity {
  process.module = 'singularity'
  singularity.enabled = true
  singularity.autoMounts = true
  }

}

