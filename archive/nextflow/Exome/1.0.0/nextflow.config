// Config file that won't be edited by individual users and will remain constant; contains parameters such as containers to use/walltime/memory

//====================  Nextflow/Container Config  ==========

manifest {
    name = "PDX_CTP"
    description = 'Pipeline for processing of PDX CTP samples, contains xenome step for processing PDX samples'
    author = 'Anuj Srivastava, Mike Lloyd, Rupesh Kesharwani, Carolyn Paisie'
    mainScript = "hctp_en_mutect.nf"
    version = "1.0.0"
}



params {
  refprefix='/pdx/pdx_resource_service/elion/refdata/Exome/hg38_broad_NOD_based_on_mm10_k25'
  ref_fa_bwa='/pdx/pdx_resource_service/elion/refdata/Exome/hs38DH.fa'
  ref_fa='/pdx/pdx_resource_service/elion/refdata/Exome/Homo_sapiens_assembly38.fasta'
  gold_std_indels='/pdx/pdx_resource_service/elion/refdata/Exome/Mills_and_1000G_gold_standard.indels.hg38.vcf.gz'
  known_indels='/pdx/pdx_resource_service/elion/refdata/Exome/Homo_sapiens_assembly38.known_indels.vcf.gz'
  targets_gatk='/pdx/pdx_resource_service/elion/refdata/Exome/359genes_targets_sorted_gatk_hg38.bed'
  dbsnp='/pdx/pdx_resource_service/elion/refdata/Exome/dbsnp_144.hg38.vcf.gz'
  targets_picard='/pdx/pdx_resource_service/elion/refdata/Exome/359genes_targets_sorted_gatk_hg38_picard.bed'
  targets_exons_picard='/pdx/pdx_resource_service/elion/refdata/Exome/CGA_exon_list_371_genes_targets_gatk_hg38_picard.bed'
  msisensor_model='/pdx/pdx_resource_service/elion/refdata/Exome/models_hg38'
  fa2bit='/pdx/pdx_resource_service/elion/refdata/Exome/Homo_sapiens_assembly38.fa.2bit'
  ensembl_transcript='/pdx/pdx_resource_service/elion/refdata/Exome/ensemble_transcript_snpeff_list_v1.txt'
  dbNSFP='/pdx/pdx_resource_service/elion/refdata/Exome/dbNSFP3.2a.txt.gz'
  Cosmic_newer='/pdx/pdx_resource_service/elion/refdata/Exome/Sorted_Cosmicv80_Coding_Noncoding.vcf'
  Cosmic_older='/pdx/pdx_resource_service/elion/refdata/Exome/COSMICv75_Coding_NonCoding.vcf'
  snpEff_config='/pdx/pdx_resource_service/elion/refdata/Exome/snpEff.config'
  snpEff_data='/pdx/pdx_resource_service/elion/refdata/Exome/data/hg38'
  hgvs_data='/pdx/pdx_resource_service/elion/refdata/Exome/data'
  rec_var='/pdx/pdx_resource_service/elion/refdata/Exome/hg38_recurring_variants_ctp'
  bins_ctpcoverage='/pdx/pdx_resource_service/elion/refdata/Exome/1MB_bins_ctpcoverage_hg38.bed'
  ctp_genes='/pdx/pdx_resource_service/elion/refdata/Exome/359genes_b38_noheader_withNames.bed'
  min_DP_filt='/pdx/pdx_resource_service/elion/pipelines/bin/filter_for_minimum_depth.py'
  filter_trim='/pdx/pdx_resource_service/elion/pipelines/bin/filter_trim.py'
  read_grp='/pdx/pdx_resource_service/elion/pipelines/bin/read_group_from_fastq.py'
  filt_dna_cov='/pdx/pdx_resource_service/elion/pipelines/bin/filter_dna_coverage.py'
  AD_min_AF='/pdx/pdx_resource_service/elion/pipelines/bin/allele_depth_min_and_AF_from_ADs.py'
  adj_snps='/pdx/pdx_resource_service/elion/pipelines/bin/joinAdjacentSNPs_AS.py'
  intergen_reg_names='/pdx/pdx_resource_service/elion/pipelines/bin/clean_intergenic_region_gene_names.py'
  agg_stat='/pdx/pdx_resource_service/elion/pipelines/bin/aggregate_stats_updated.py'
  cov_calc='/pdx/pdx_resource_service/elion/pipelines/bin/coveragecalculator.py'
  add_caller_gatk='/pdx/pdx_resource_service/elion/pipelines/bin/caller_add_gatk.sh'
  add_caller_pindel='/pdx/pdx_resource_service/elion/pipelines/bin/caller_add_pindel.sh'
  gatk_form='/pdx/pdx_resource_service/elion/pipelines/bin/gatk_formatter.sh'
  tmb_prog='/pdx/pdx_resource_service/elion/pipelines/bin/TMB_final.R'
}


process {
  withLabel: xenome                    { container = "/pdx/pdx_resource_service/elion/containers/xenome_1.0.1.sif" }
  withLabel: fq_tools                  { container = "/pdx/pdx_resource_service/elion/containers/fastq-tools.sif" }
  withLabel: bwakit                    { container = "/pdx/pdx_resource_service/elion/containers/bwakit_v0.7.15_cv1.sif" }
  withLabel: samtools_0_1_18           { container = "/pdx/pdx_resource_service/elion/containers/samtools-0.1.18.sif" }
  withLabel: gatk3                     { container = "/pdx/pdx_resource_service/elion/containers/GATK_3.4_java_1.7_samtools.sif" }
  withLabel: picard_2_8_1              { container = "/pdx/pdx_resource_service/elion/containers/picard_2.8.1.sif" }
  withLabel: picard_1_95_python_2_7_3  { container = "/pdx/pdx_resource_service/elion/containers/picard-1.95_python_2_7_3.sif" }
  withLabel: gcc_zlib_glibc_msisensor2 { container = "/pdx/pdx_resource_service/elion/containers/msisensor2_latest.sif" }
  withLabel: mutect2                   { container = "/pdx/pdx_resource_service/elion/containers/gatk-4.0.5.1_java_1.8_htslib_tabix.sif" }
  withLabel: variant_filtration        { container = "/pdx/pdx_resource_service/elion/containers/perl_java_1.8_python_2.7.3_tabix_snpeff_4_3.sif" }
  withLabel: adj_snps_fix              { container = "/pdx/pdx_resource_service/elion/containers/perl_java_1.8_python_2.7.3_tabix_samtools_bcftools_htslib_snpEff_4_3.sif" }
  withLabel: microIndel_call_a         { container = "/pdx/pdx_resource_service/elion/containers/pindel_v0.2.5.sif" }
  withLabel: microIndel_call_b         { container = "/pdx/pdx_resource_service/elion/containers/bedtools_2.27.1_python_2_7_3.sif" }
  withLabel: microIndel_filt           { container = "/pdx/pdx_resource_service/elion/containers/perl_java_1.8_python_2.7.3_tabix_snpeff_4_3.sif" }
  withLabel: variant_annot             { container = "/pdx/pdx_resource_service/elion/containers/java_perl_vcftools_python_2_snpEff_4_3.sif" }
  withLabel: tmb_score                 { container = "/pdx/pdx_resource_service/elion/containers/bedtools_2.27.1_java_1.8_snpeff_4.3_R.sif" }
  withLabel: python_2_7_3              { container = "/pdx/pdx_resource_service/elion/containers/python_2.7.3.sif" }
  withLabel: gatk_coverage_stats       { container = "/pdx/pdx_resource_service/elion/containers/bedtools_2.27.1_python_2.7.3_java_1.8_GATK_3.4_samtools_1.3.1.sif" }
  withLabel: python_2_7                { container = "/pdx/pdx_resource_service/elion/containers/python_2.7.sif" }
}


process {

  withLabel:vshort_mem {
    cpus = 1
    memory = 5.GB
    time = '01:00:00'
    clusterOptions = '-q batch'
    containerOptions = '-B /pdx/pdx_resource_service/ -B ${HOME}'
  }
  withLabel:short_mem {
    cpus = 1
    memory = 25.GB
    time = '08:00:00'
    clusterOptions = '-q batch'
    containerOptions = '-B /pdx/pdx_resource_service/ -B ${HOME}'
  }
  withLabel:long_mem {
    cpus = 1
    memory = 35.GB
    time = '23:00:00'
    clusterOptions = '-q batch'
    containerOptions = '-B /pdx/pdx_resource_service/ -B ${HOME}'
  }
  withLabel:vlong_mem {
    cpus = 1
    memory = 120.GB
    time = '72:00:00'
    clusterOptions = '-q batch'
    containerOptions = '-B /pdx/pdx_resource_service/ -B ${HOME}'
  }
  withLabel:short_high_mem {
    cpus = 12
    memory = 30.GB
    time = '08:00:00'
    clusterOptions = '-q batch'
    containerOptions = '-B /pdx/pdx_resource_service/ -B ${HOME}'
  }
  withLabel:long_high_mem {
    cpus = 12
    memory = 30.GB
    time = '24:00:00'
    clusterOptions = '-q batch'
    containerOptions = '-B /pdx/pdx_resource_service/ -B ${HOME}'
  }
  withLabel:trans_mem {
  cpus = 1
  time = '00:05:00'
  clusterOptions = '-q batch'
  containerOptions = '-B /pdx/pdx_resource_service/ -B ${HOME}'
  }

}


env {
    NXF_ANSI_SUMMARY = true
    NXF_ANSI_LOG = true
    NXF_DEBUG = 2
}


report {
    enabled = true // false
    file = "nf_reports/report.html"
}

trace {
    enabled = true // false
    file = "nf_reports/trace.txt"
    fields = \
         "task_id,"   \
       + "hash,"      \
       + "process,"   \
       + "tag,"       \
       + "status,"    \
       + "exit,"      \
       + "start,"     \
       + "container," \
       + "cpus,"      \
       + "time,"      \
       + "disk,"      \
       + "memory,"    \
       + "duration,"  \
       + "realtime,"  \
       + "queue,"     \
       + "%cpu,"      \
       + "%mem,"      \
       + "rss,"       \
       + "vmem,"      \
       + "rchar,"     \
       + "wchar"
}


profiles {
  slurm {
    process.executor = "slurm"
    process.clusterOptions = '-q batch'
    submitRateLimit = "2 sec"
    process.module = "slurm"
    }
  singularity {
    process.module = 'singularity'
    singularity.enabled = true
    singularity.autoMounts = true
    }
}

